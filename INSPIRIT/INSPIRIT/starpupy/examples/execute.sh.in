#!@REALBASH@
# StarPU --- Runtime system for heterogeneous multicore architectures.
#
# Copyright (C) 2020-2022  Universit√© de Bordeaux, CNRS (LaBRI UMR 5800), Inria
#
# StarPU is free software; you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or (at
# your option) any later version.
#
# StarPU is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
# See the GNU Lesser General Public License in COPYING.LGPL for more details.
#

PROGNAME=$0

usage()
{
    echo "Tool to launch StarPUPY examples"
    echo ""
    echo "  Typical usage:"
    echo "     $PROGNAME python_script.py"
    echo ""
    echo "Options:"
    echo "	-h, --help          display this help and exit"
    echo "	-v, --version       output version information and exit"
    echo "	--valgrind          launch executable with valgrind"
    echo "	--gdb               launch executable with gdb"
    echo "	--mpirun            launch executable with MPI using 2 processes"
    exit 0
}

if [ "$1" = "-v" ] || [ "$1" = "--version" ]
then
    echo "$PROGNAME (@PACKAGE_NAME@) @PACKAGE_VERSION@"
    exit 0
fi

if [ "$1" = "-h" ] || [ "$1" = "--help" ] || [ "x"$1 = "x" ]
then
    usage
fi

exampledir=@STARPU_SRC_DIR@/starpupy/examples

modpath=@STARPU_BUILD_DIR@/src/.libs${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH}
pypath=@STARPU_BUILD_DIR@/starpupy/src/build:$PYTHONPATH

LOADER="@STARPU_BUILD_DIR@/starpupy/examples/loader"
PYTHON=@PYTHON@

if test -z "$LAUNCHER"
then
    LAUNCHER="mpiexec -np 2"
fi
mpi=""
gdb=""
MPI_LOADER=""

read_arg()
{
    do_shift=0
    if test "$1" == "--valgrind"
    then
	export PYTHONMALLOC=malloc
	LOADER="$LOADER valgrind --track-origins=yes"
	do_shift=1
    elif test "$1" == "--gdb"
    then
	gdb="gdb"
	LOADER="gdb --args"
	do_shift=1
    elif test "$1" == "--mpirun"
    then
	mpi="mpi"
	do_shift=1
    fi
}

for x in $*
do
    read_arg $x
    if test $do_shift == 1
    then
	shift
    fi
done
for x in $LOADER_ARGS
do
    read_arg $x
done

if test "$mpi" == "mpi"
then
    if test -n "$gdb"
    then
	MPI_LOADER="$LAUNCHER xterm -sl 10000 -hold -e"
    else
	MPI_LOADER="$LAUNCHER"
    fi
fi

examplefile=$1
if test -f $examplefile
then
    pythonscript=$examplefile
elif test -f $exampledir/$examplefile
then
    pythonscript=$exampledir/$examplefile
else
    echo "Error. Python script $examplefile not found in current directory or in $exampledir"
    exit 1
fi
shift

set -x

if [ -n "$STARPU_LD_PRELOAD" ]
then
    export LD_PRELOAD=$STARPU_LD_PRELOAD${LD_PRELOAD:+:$LD_PRELOAD}
fi
export PYTHONPATH=$pypath LD_LIBRARY_PATH=$modpath

exec $MPI_LOADER $LOADER $PYTHON $pythonscript $*
